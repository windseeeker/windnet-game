// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: warrior.proto

#ifndef PROTOBUF_warrior_2eproto__INCLUDED
#define PROTOBUF_warrior_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace warrior {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_warrior_2eproto();
void protobuf_AssignDesc_warrior_2eproto();
void protobuf_ShutdownFile_warrior_2eproto();

class Role;
class Item;
class SoulItem;

// ===================================================================

class Role : public ::google::protobuf::Message {
 public:
  Role();
  virtual ~Role();
  
  Role(const Role& from);
  
  inline Role& operator=(const Role& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Role& default_instance();
  
  void Swap(Role* other);
  
  // implements Message ----------------------------------------------
  
  Role* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Role& from);
  void MergeFrom(const Role& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
  // required int32 profession = 2;
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 2;
  inline ::google::protobuf::int32 profession() const;
  inline void set_profession(::google::protobuf::int32 value);
  
  // required string role_name = 3;
  inline bool has_role_name() const;
  inline void clear_role_name();
  static const int kRoleNameFieldNumber = 3;
  inline const ::std::string& role_name() const;
  inline void set_role_name(const ::std::string& value);
  inline void set_role_name(const char* value);
  inline void set_role_name(const char* value, size_t size);
  inline ::std::string* mutable_role_name();
  inline ::std::string* release_role_name();
  
  // required int32 gold = 4;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 4;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);
  
  // required int32 money = 5;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 5;
  inline ::google::protobuf::int32 money() const;
  inline void set_money(::google::protobuf::int32 value);
  
  // required int32 rmb = 6;
  inline bool has_rmb() const;
  inline void clear_rmb();
  static const int kRmbFieldNumber = 6;
  inline ::google::protobuf::int32 rmb() const;
  inline void set_rmb(::google::protobuf::int32 value);
  
  // required int32 level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // required int32 vip_level = 8;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 8;
  inline ::google::protobuf::int32 vip_level() const;
  inline void set_vip_level(::google::protobuf::int32 value);
  
  // required int32 exp = 9;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 9;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);
  
  // optional int32 last_logout_time = 10;
  inline bool has_last_logout_time() const;
  inline void clear_last_logout_time();
  static const int kLastLogoutTimeFieldNumber = 10;
  inline ::google::protobuf::int32 last_logout_time() const;
  inline void set_last_logout_time(::google::protobuf::int32 value);
  
  // optional int32 souls_value = 11;
  inline bool has_souls_value() const;
  inline void clear_souls_value();
  static const int kSoulsValueFieldNumber = 11;
  inline ::google::protobuf::int32 souls_value() const;
  inline void set_souls_value(::google::protobuf::int32 value);
  
  // optional int32 souls_index = 12;
  inline bool has_souls_index() const;
  inline void clear_souls_index();
  static const int kSoulsIndexFieldNumber = 12;
  inline ::google::protobuf::int32 souls_index() const;
  inline void set_souls_index(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:warrior.Role)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_role_name();
  inline void clear_has_role_name();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_rmb();
  inline void clear_has_rmb();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_last_logout_time();
  inline void clear_has_last_logout_time();
  inline void set_has_souls_value();
  inline void clear_has_souls_value();
  inline void set_has_souls_index();
  inline void clear_has_souls_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 role_id_;
  ::google::protobuf::int32 profession_;
  ::std::string* role_name_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 rmb_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 vip_level_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 last_logout_time_;
  ::google::protobuf::int32 souls_value_;
  ::google::protobuf::int32 souls_index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  friend void  protobuf_AddDesc_warrior_2eproto();
  friend void protobuf_AssignDesc_warrior_2eproto();
  friend void protobuf_ShutdownFile_warrior_2eproto();
  
  void InitAsDefaultInstance();
  static Role* default_instance_;
};
// -------------------------------------------------------------------

class Item : public ::google::protobuf::Message {
 public:
  Item();
  virtual ~Item();
  
  Item(const Item& from);
  
  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Item& default_instance();
  
  void Swap(Item* other);
  
  // implements Message ----------------------------------------------
  
  Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 global_id = 1;
  inline bool has_global_id() const;
  inline void clear_global_id();
  static const int kGlobalIdFieldNumber = 1;
  inline ::google::protobuf::int32 global_id() const;
  inline void set_global_id(::google::protobuf::int32 value);
  
  // required int32 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
  // required int32 item_id = 3;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 3;
  inline ::google::protobuf::int32 item_id() const;
  inline void set_item_id(::google::protobuf::int32 value);
  
  // required int32 item_num = 4;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 4;
  inline ::google::protobuf::int32 item_num() const;
  inline void set_item_num(::google::protobuf::int32 value);
  
  // required int32 index = 5;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 5;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // required int32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // required int32 state = 7;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 7;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);
  
  // optional int32 quality = 8;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 8;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);
  
  // optional int32 is_equip = 9;
  inline bool has_is_equip() const;
  inline void clear_is_equip();
  static const int kIsEquipFieldNumber = 9;
  inline ::google::protobuf::int32 is_equip() const;
  inline void set_is_equip(::google::protobuf::int32 value);
  
  // optional string gems = 10;
  inline bool has_gems() const;
  inline void clear_gems();
  static const int kGemsFieldNumber = 10;
  inline const ::std::string& gems() const;
  inline void set_gems(const ::std::string& value);
  inline void set_gems(const char* value);
  inline void set_gems(const char* value, size_t size);
  inline ::std::string* mutable_gems();
  inline ::std::string* release_gems();
  
  // @@protoc_insertion_point(class_scope:warrior.Item)
 private:
  inline void set_has_global_id();
  inline void clear_has_global_id();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_is_equip();
  inline void clear_has_is_equip();
  inline void set_has_gems();
  inline void clear_has_gems();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 global_id_;
  ::google::protobuf::int32 role_id_;
  ::google::protobuf::int32 item_id_;
  ::google::protobuf::int32 item_num_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 quality_;
  ::std::string* gems_;
  ::google::protobuf::int32 is_equip_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_warrior_2eproto();
  friend void protobuf_AssignDesc_warrior_2eproto();
  friend void protobuf_ShutdownFile_warrior_2eproto();
  
  void InitAsDefaultInstance();
  static Item* default_instance_;
};
// -------------------------------------------------------------------

class SoulItem : public ::google::protobuf::Message {
 public:
  SoulItem();
  virtual ~SoulItem();
  
  SoulItem(const SoulItem& from);
  
  inline SoulItem& operator=(const SoulItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SoulItem& default_instance();
  
  void Swap(SoulItem* other);
  
  // implements Message ----------------------------------------------
  
  SoulItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SoulItem& from);
  void MergeFrom(const SoulItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // required int32 soul_id = 2;
  inline bool has_soul_id() const;
  inline void clear_soul_id();
  static const int kSoulIdFieldNumber = 2;
  inline ::google::protobuf::int32 soul_id() const;
  inline void set_soul_id(::google::protobuf::int32 value);
  
  // required int32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // required int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // required int32 exp = 5;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:warrior.SoulItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_soul_id();
  inline void clear_has_soul_id();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_exp();
  inline void clear_has_exp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 soul_id_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 exp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_warrior_2eproto();
  friend void protobuf_AssignDesc_warrior_2eproto();
  friend void protobuf_ShutdownFile_warrior_2eproto();
  
  void InitAsDefaultInstance();
  static SoulItem* default_instance_;
};
// ===================================================================


// ===================================================================

// Role

// required int32 role_id = 1;
inline bool Role::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Role::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Role::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Role::clear_role_id() {
  role_id_ = 0;
  clear_has_role_id();
}
inline ::google::protobuf::int32 Role::role_id() const {
  return role_id_;
}
inline void Role::set_role_id(::google::protobuf::int32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required int32 profession = 2;
inline bool Role::has_profession() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Role::set_has_profession() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Role::clear_has_profession() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Role::clear_profession() {
  profession_ = 0;
  clear_has_profession();
}
inline ::google::protobuf::int32 Role::profession() const {
  return profession_;
}
inline void Role::set_profession(::google::protobuf::int32 value) {
  set_has_profession();
  profession_ = value;
}

// required string role_name = 3;
inline bool Role::has_role_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Role::set_has_role_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Role::clear_has_role_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Role::clear_role_name() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    role_name_->clear();
  }
  clear_has_role_name();
}
inline const ::std::string& Role::role_name() const {
  return *role_name_;
}
inline void Role::set_role_name(const ::std::string& value) {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void Role::set_role_name(const char* value) {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void Role::set_role_name(const char* value, size_t size) {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Role::mutable_role_name() {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    role_name_ = new ::std::string;
  }
  return role_name_;
}
inline ::std::string* Role::release_role_name() {
  clear_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = role_name_;
    role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 gold = 4;
inline bool Role::has_gold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Role::set_has_gold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Role::clear_has_gold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Role::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 Role::gold() const {
  return gold_;
}
inline void Role::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
}

// required int32 money = 5;
inline bool Role::has_money() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Role::set_has_money() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Role::clear_has_money() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Role::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 Role::money() const {
  return money_;
}
inline void Role::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
}

// required int32 rmb = 6;
inline bool Role::has_rmb() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Role::set_has_rmb() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Role::clear_has_rmb() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Role::clear_rmb() {
  rmb_ = 0;
  clear_has_rmb();
}
inline ::google::protobuf::int32 Role::rmb() const {
  return rmb_;
}
inline void Role::set_rmb(::google::protobuf::int32 value) {
  set_has_rmb();
  rmb_ = value;
}

// required int32 level = 7;
inline bool Role::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Role::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Role::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Role::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 Role::level() const {
  return level_;
}
inline void Role::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required int32 vip_level = 8;
inline bool Role::has_vip_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Role::set_has_vip_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Role::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Role::clear_vip_level() {
  vip_level_ = 0;
  clear_has_vip_level();
}
inline ::google::protobuf::int32 Role::vip_level() const {
  return vip_level_;
}
inline void Role::set_vip_level(::google::protobuf::int32 value) {
  set_has_vip_level();
  vip_level_ = value;
}

// required int32 exp = 9;
inline bool Role::has_exp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Role::set_has_exp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Role::clear_has_exp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Role::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 Role::exp() const {
  return exp_;
}
inline void Role::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 last_logout_time = 10;
inline bool Role::has_last_logout_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Role::set_has_last_logout_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Role::clear_has_last_logout_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Role::clear_last_logout_time() {
  last_logout_time_ = 0;
  clear_has_last_logout_time();
}
inline ::google::protobuf::int32 Role::last_logout_time() const {
  return last_logout_time_;
}
inline void Role::set_last_logout_time(::google::protobuf::int32 value) {
  set_has_last_logout_time();
  last_logout_time_ = value;
}

// optional int32 souls_value = 11;
inline bool Role::has_souls_value() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Role::set_has_souls_value() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Role::clear_has_souls_value() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Role::clear_souls_value() {
  souls_value_ = 0;
  clear_has_souls_value();
}
inline ::google::protobuf::int32 Role::souls_value() const {
  return souls_value_;
}
inline void Role::set_souls_value(::google::protobuf::int32 value) {
  set_has_souls_value();
  souls_value_ = value;
}

// optional int32 souls_index = 12;
inline bool Role::has_souls_index() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Role::set_has_souls_index() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Role::clear_has_souls_index() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Role::clear_souls_index() {
  souls_index_ = 0;
  clear_has_souls_index();
}
inline ::google::protobuf::int32 Role::souls_index() const {
  return souls_index_;
}
inline void Role::set_souls_index(::google::protobuf::int32 value) {
  set_has_souls_index();
  souls_index_ = value;
}

// -------------------------------------------------------------------

// Item

// required int32 global_id = 1;
inline bool Item::has_global_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Item::set_has_global_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Item::clear_has_global_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Item::clear_global_id() {
  global_id_ = 0;
  clear_has_global_id();
}
inline ::google::protobuf::int32 Item::global_id() const {
  return global_id_;
}
inline void Item::set_global_id(::google::protobuf::int32 value) {
  set_has_global_id();
  global_id_ = value;
}

// required int32 role_id = 2;
inline bool Item::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Item::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Item::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Item::clear_role_id() {
  role_id_ = 0;
  clear_has_role_id();
}
inline ::google::protobuf::int32 Item::role_id() const {
  return role_id_;
}
inline void Item::set_role_id(::google::protobuf::int32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required int32 item_id = 3;
inline bool Item::has_item_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Item::set_has_item_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Item::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Item::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
inline ::google::protobuf::int32 Item::item_id() const {
  return item_id_;
}
inline void Item::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required int32 item_num = 4;
inline bool Item::has_item_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Item::set_has_item_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Item::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Item::clear_item_num() {
  item_num_ = 0;
  clear_has_item_num();
}
inline ::google::protobuf::int32 Item::item_num() const {
  return item_num_;
}
inline void Item::set_item_num(::google::protobuf::int32 value) {
  set_has_item_num();
  item_num_ = value;
}

// required int32 index = 5;
inline bool Item::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Item::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Item::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Item::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 Item::index() const {
  return index_;
}
inline void Item::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// required int32 level = 6;
inline bool Item::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Item::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Item::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Item::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 Item::level() const {
  return level_;
}
inline void Item::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required int32 state = 7;
inline bool Item::has_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Item::set_has_state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Item::clear_has_state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Item::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 Item::state() const {
  return state_;
}
inline void Item::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 quality = 8;
inline bool Item::has_quality() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Item::set_has_quality() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Item::clear_has_quality() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Item::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 Item::quality() const {
  return quality_;
}
inline void Item::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int32 is_equip = 9;
inline bool Item::has_is_equip() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Item::set_has_is_equip() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Item::clear_has_is_equip() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Item::clear_is_equip() {
  is_equip_ = 0;
  clear_has_is_equip();
}
inline ::google::protobuf::int32 Item::is_equip() const {
  return is_equip_;
}
inline void Item::set_is_equip(::google::protobuf::int32 value) {
  set_has_is_equip();
  is_equip_ = value;
}

// optional string gems = 10;
inline bool Item::has_gems() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Item::set_has_gems() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Item::clear_has_gems() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Item::clear_gems() {
  if (gems_ != &::google::protobuf::internal::kEmptyString) {
    gems_->clear();
  }
  clear_has_gems();
}
inline const ::std::string& Item::gems() const {
  return *gems_;
}
inline void Item::set_gems(const ::std::string& value) {
  set_has_gems();
  if (gems_ == &::google::protobuf::internal::kEmptyString) {
    gems_ = new ::std::string;
  }
  gems_->assign(value);
}
inline void Item::set_gems(const char* value) {
  set_has_gems();
  if (gems_ == &::google::protobuf::internal::kEmptyString) {
    gems_ = new ::std::string;
  }
  gems_->assign(value);
}
inline void Item::set_gems(const char* value, size_t size) {
  set_has_gems();
  if (gems_ == &::google::protobuf::internal::kEmptyString) {
    gems_ = new ::std::string;
  }
  gems_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Item::mutable_gems() {
  set_has_gems();
  if (gems_ == &::google::protobuf::internal::kEmptyString) {
    gems_ = new ::std::string;
  }
  return gems_;
}
inline ::std::string* Item::release_gems() {
  clear_has_gems();
  if (gems_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = gems_;
    gems_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// SoulItem

// required int32 id = 1;
inline bool SoulItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoulItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoulItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoulItem::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SoulItem::id() const {
  return id_;
}
inline void SoulItem::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 soul_id = 2;
inline bool SoulItem::has_soul_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SoulItem::set_has_soul_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SoulItem::clear_has_soul_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SoulItem::clear_soul_id() {
  soul_id_ = 0;
  clear_has_soul_id();
}
inline ::google::protobuf::int32 SoulItem::soul_id() const {
  return soul_id_;
}
inline void SoulItem::set_soul_id(::google::protobuf::int32 value) {
  set_has_soul_id();
  soul_id_ = value;
}

// required int32 index = 3;
inline bool SoulItem::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SoulItem::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SoulItem::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SoulItem::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 SoulItem::index() const {
  return index_;
}
inline void SoulItem::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// required int32 type = 4;
inline bool SoulItem::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SoulItem::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SoulItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SoulItem::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 SoulItem::type() const {
  return type_;
}
inline void SoulItem::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 exp = 5;
inline bool SoulItem::has_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SoulItem::set_has_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SoulItem::clear_has_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SoulItem::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 SoulItem::exp() const {
  return exp_;
}
inline void SoulItem::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace warrior

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_warrior_2eproto__INCLUDED
